float radius = 50.0;
int X, Y;
int nX, nY;
int delay = 4;

int sX, sY, squareX, squareY;
int yellowFill = 0, redFill = 121;
boolean move = true;
boolean fullscreen = false;

PImage b;
var shapes = [];

function makeRect(x, y, h, w, f1, f2, f3) {
  return {
    draw: function() {
      stroke(255);
      fill(f1, f2, f3);
      rect(x, y, h, w);
    },
  };
}

function makeText(x, y, s, f1, f2, f3) {
  return {
    draw: function() {
      stroke(0);
      textSize(200);
      fill(f1, f2, f3);
      text(s, x, y);
    },
  };
}

// Setup the Processing Canvas
void setup(){
  size( 500, 500 );
  frameRate( 15 );
  X = width / 2;
  Y = width / 2;
  nX = X;
  nY = Y;
  b = loadImage("spongie.gif");
}

void mousePressed() {
  shapes.push(new Square(100, 100));
}

int randInt(max) {
  return Math.floor(Math.random()*max);
}

class Square {
  int x, y, alpha;

  Square(int xin, int yin) {
    x = xin;
    y = yin;
    alpha = 255;
  }

  function update() {
    alpha -= 15;
    console.log(alpha);
    return alpha > 0;
  }

  function draw() {
    fill(0, 60, 100, alpha);
    ellipse(x, y, 100, 100);
  }
}

// Main draw loop
void draw(){
  background(100);
  noStroke();
  //fill(0, 6);
  //rect(0, 0, width, height);

  for(var shape in shapes) {
    if(shapes[shape] != null) {
      if(!shapes[shape].update()) {
       shapes[shape] = null;
      } else {
        shapes[shape].draw();
      }
    }
  }

/*
  radius = radius + sin( frameCount / 4 );

  // Track circle to new destination
  X+=(nX-X)/delay;
  Y+=(nY-Y)/delay;

  // Set fill-color to blue
  fill( 0, 121, 184 );

  // Set stroke-color white
  stroke(255); 
  strokeWeight( 10 );

  // Draw circle
  ellipse( X, Y, radius, radius );

  fill(redFill, 0, yellowFill);

  squareX+=(sX-squareX)/delay;
  squareY+=(sY-squareY)/delay;
 
  // Draw rectangle
  rect(squareX, squareY, 30.0, 30.0);

  for(var shape in shapes) {
    shapes[shape].draw();
  }
*/

}

// Set circle's next destination
void mouseMoved(){
  if(move) {
    nX = mouseX;
    nY = mouseY;  
  }
}

void keyPressed() {
  if(key == CODED) {
    if(keyCode == UP) {
      temp = redFill;
      redFill = yellowFill;
      yellowFill = temp;
    }
  } else {
    if(key == 't') {
      temp = redFill;
      redFill = yellowFill;
      yellowFill = temp;
    } else if(key == 's') {
      move = !move;
    } else if(key == 'f') {
      if(!fullscreen) {
        width = window.innerWidth;
        height = window.innerHeight;
        $("h1").hide();
        $("p").hide();
        $("canvas").attr("width", width).attr("height", height);
        size(width, height);
        fullscreen = true;
      }
    }

    var keyStr = String.fromCharCode(key);
    shapes.push(makeText(randInt(width), randInt(height), keyStr,
			 randInt(255), randInt(255), randInt(255)));
  }
}
