float radius = 50.0;
int X, Y;
int nX, nY;
int delay = 4;

int sX, sY, squareX, squareY;
int yellowFill = 0, redFill = 121;
boolean move = true;
boolean fullscreen = false;

var shapes = [];

// Setup the Processing Canvas
void setup(){
  size( 500, 500 );
  frameRate( 15 );
  X = width / 2;
  Y = width / 2;
  nX = X;
  nY = Y;
  textAlign(CENTER);
}

void mousePressed() {
  shapes.unshift(new Square(100, 100));
}

int randInt(max) {
  return Math.floor(Math.random()*max);
}

class Text {
  int f1, f2, f3, x, y, alpha;
  string s;
  int fade = 3;
  int rotation;
  float rotationAmount;

  Text(xin, yin, sin, f1in, f2in, f3in) {
    x = xin;
    y = yin;
    s = sin;
    f1 = f1in;
    f2 = f2in;
    f3 = f3in;
    alpha = 255;
    rotation = random(40, 200);
    rotationAmount = Math.random() / 2;
  }

  function update() {
    alpha -= fade;
    if(rotation > 0) {
      rotation -= (rotation * rotationAmount);
    } else {
      rotation = 0;
    }
    return alpha > 0;
  }

  function draw() {
    pushMatrix();
    translate(x, y);
    rotate(radians(rotation));
    translate(-x,-y);
    stroke(0);
    textSize(200);
    fill(f1, f2, f3, alpha);
    text(s, x, y);
    popMatrix();

    rotation += 5;
  }
}

class Square {
  int x, y, alpha;

  Square(int xin, int yin) {
    x = xin;
    y = yin;
    alpha = 255;
  }

  function update() {
    alpha -= 15;
    return alpha > 0;
  }

  function draw() {
    fill(0, 60, 100, alpha);
    ellipse(x, y, 100, 100);
  }
}

// Main draw loop
void draw(){
  background(255);
  noStroke();
  //fill(0, 6);
  //rect(0, 0, width, height);

  for(var shape=0; shape < shapes.length; shape++) {
    if(shapes[shape] != null) {
      if(!shapes[shape].update()) {
       shapes[shape] = null;
      } else {
        shapes[shape].draw();
      }
    } 
  }

  while(shapes[shapes.length-1] == null && shapes.length > 0) {
    shapes.pop();
  }
}

// Set circle's next destination
void mouseMoved(){
  if(move) {
    nX = mouseX;
    nY = mouseY;
  }
}

void keyPressed() {
  if(key == CODED) {
    if(keyCode == UP) {
      temp = redFill;
      redFill = yellowFill;
      yellowFill = temp;
    }
  } else {
    if(key == 't') {
      temp = redFill;
      redFill = yellowFill;
      yellowFill = temp;
    } else if(key == 's') {
      move = !move;
    } else if(key == 'f') {
      if(!fullscreen) {
        width = window.innerWidth;
        height = window.innerHeight;
        $("h1").hide();
        $("p").hide();
        $("canvas").attr("width", width).attr("height", height);
        size(width, height);
        fullscreen = true;
      }
    }

    var keyStr = String.fromCharCode(key);
    var re = /[a-z]|[A-Z]/;
    if(re.test(keyStr)) {
      shapes.unshift(new Text(randInt(width), randInt(height), keyStr,
      			 randInt(255), randInt(255), randInt(255)));
    }
  }
}
